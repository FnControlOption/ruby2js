docs = File.expand_path('../docs', __dir__)
demo = "#{docs}/src/demo"
source_files = Rake::FileList.new("../lib/**/*.rb")
filters = Rake::FileList.new("../lib/ruby2js/filter/*.rb")
opal_files = Rake::FileList.new("*.opal")

file "filters.opal" => filters do
  puts 'generate filters.opal'
  content = filters.map do |file|
    require file
    "require #{"ruby2js/filter/#{File.basename(file, '.rb')}".inspect}"
  end

  # find each module and add it to the list of filters.
  filters = {}
  Ruby2JS::Filter::DEFAULTS.each do |mod|
    method = mod.instance_method(mod.instance_methods.first)
    name = method.source_location.first
    filters[File.basename(name, '.rb')] = mod
  end
  content << "Filters = #{filters.inspect}"

  IO.write "filters.opal", content.join("\n")
end

file "#{demo}/index.erb" => 'ruby2js.rb' do
  Dir.chdir(docs) {system "rake #{demo}/index.erb"}
end

file "#{demo}/editor.js" => ['../demo/editor.js'] do
  Dir.chdir(docs) {sh "yarn editor"}
end

file "#{demo}/livedemo.js" => [*opal_files, *source_files, 'filters.opal'] do
  mkdir demo unless Dir.exist? demo
  sh "opal --compile -g regexp_parser -I ../lib -I . livedemo.opal > #{docs}/src/demo/livedemo.js"
end

task :default => [
  "#{demo}/index.erb",
  "#{demo}/editor.js",
  "#{demo}/livedemo.js"
]

