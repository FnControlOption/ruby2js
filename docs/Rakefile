docs = File.expand_path(__dir__)
demo = "#{docs}/src/demo"
source_files = Rake::FileList.new("../lib/**/*.rb", "../lib/ruby2js.rb")
filters = Rake::FileList.new("../lib/ruby2js/filter/*.rb")
opal_files = Rake::FileList.new("../demo/*.opal")
controller_files = Rake::FileList.new("../demo/controllers/*_controller.js.rb")

require 'bundler/setup'
require 'regexp_parser'
regexp_parser_path = File.dirname(Gem.find_files_from_load_path('regexp_parser').first)

terser = "#{__dir__}/node_modules/.bin/terser"
terser = "cat" if ENV['NODE_ENV'] == 'development' or !File.exist? terser

file "../demo/filters.opal" => filters do
  puts 'generate filters.opal'
  content = filters.map do |file|
    require file
    "require #{"ruby2js/filter/#{File.basename(file, '.rb')}".inspect}"
  end

  # find each module and add it to the list of filters.
  filters = {}
  Ruby2JS::Filter::DEFAULTS.each do |mod|
    method = mod.instance_method(mod.instance_methods.first)
    name = method.source_location.first
    filters[File.basename(name, '.rb')] = mod
  end
  content << "Filters = #{filters.inspect}"

  IO.write "../demo/filters.opal", content.join("\n")
end

file "#{demo}/index.erb" => '../demo/ruby2js.rb' do
  puts "Generating #{demo}/index.erb"
  mkdir demo unless Dir.exist? demo

  begin
    request_uri = ENV['REQUEST_URI']
    ENV['REQUEST_URI'] = '/demo'
    livedoc = `#{RbConfig.ruby} ../demo/ruby2js.rb --live`
  ensure
    if request_uri
      ENV['REQUEST_URI'] = request_uri
    else
      ENV.delete 'REQUEST_URI'
    end

    erb = [
      "---\nlayout: default\n---\n",
      livedoc[/<body.*?>(.*?)<\/body>/m, 1].
        sub(/<style.*?<\/style>/m, '').
        sub(/<script.*?<\/script>/m, ''),
    ].join("\n")

    IO.write("#{demo}/index.erb", erb)
  end
end

file "#{demo}/editor.js" => ['../demo/editor.js'] do
  sh "cat ../demo/editor.js | " +
    "npx rollup -f iife -p @rollup/plugin-node-resolve |" +
    "#{terser} > src/demo/editor.js"
end

file "#{demo}/livedemo.js" => ['../demo/livedemo.js.rb', *controller_files] do
  sh "#{RbConfig.ruby} ../demo/ruby2js.rb --filter require --filter stimulus --filter functions --es2019 ../demo/livedemo.js.rb | " +
    "npx rollup -f iife --context window -p @rollup/plugin-node-resolve | " +
    "#{terser} > #{demo}/livedemo.js"
end

file "#{demo}/ruby2js.js" => [*opal_files, *source_files, '../demo/filters.opal'] do
  mkdir demo unless Dir.exist? demo
  opal = "opal --compile -E -I #{regexp_parser_path} -I ../lib -I . ruby2js.opal"
  target = "#{docs}/src/demo/ruby2js.js"
  Dir.chdir '../demo' do
    sh "#{opal} | #{terser} > #{target}"
  end
end

task :clean do
  rm_rf demo
end

task :default => [
  "#{demo}/index.erb",
  "#{demo}/editor.js",
  "#{demo}/livedemo.js",
  "#{demo}/ruby2js.js"
]

